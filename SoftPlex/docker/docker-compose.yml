version: '3.5'

services:
  webapp:
    build: 
      context: ../
      dockerfile: ./docker/dotnetwebapp/Dockerfile
    pull_policy: always
    container_name: webapp_container
    networks:
      - postgres
    ports:
      - 5081:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8081
    restart: on-failure

  webapi:
    build: 
      context: ../
      dockerfile: ./docker/dotnet/Dockerfile
    pull_policy: always
    container_name: webapi_container
    networks:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 5080:8080
    restart: on-failure

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "54323:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin: